{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","data","type","value","onChange","target","handdleInputChange","getGifs","category","a","url","encodeURI","fetch","response","json","promiseFormatData","map","img","id","title","images","downsized_medium","GifGridItem","gif","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categoria","setCategoria","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAc5C,OAEI,sBAAMC,SATY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACtCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAAU,SAACP,GAAD,OAhBK,SAACA,GACxBF,EAAcE,EAAEQ,OAAOF,OAeEG,CAAmBT,S,uBCtBvCU,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGII,MAAMF,GAHV,cAGbG,EAHa,gBAIIA,EAASC,OAJb,uBAIXb,EAJW,EAIXA,KAGFc,EAAoBd,EAAKe,KAAI,SAACC,GAChC,MAAQ,CACJC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QAXtB,kBAcZK,GAdY,4CAAH,sDCCPO,EAAc,SAAC,GAAW,IAAVC,EAAS,EAATA,IACzB,OACI,sBAAKC,UAAY,+CAAjB,UACI,qBAAKC,IAAKF,EAAIb,IAAKgB,IAAMH,EAAIJ,QAE7B,6BAAkBI,EAAIJ,OAAbI,EAAIL,QCHZS,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EAEdf,mBAAS,CAC/BQ,KAAM,GACN2B,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAY,WACRxB,EAAQC,GACHwB,MAAK,SAAAC,GAEEH,EAAS,CACL7B,KAAMgC,EACNL,SAAQ,SAIzB,CAACpB,IAEGqB,EDfyBK,CAAc1B,GAAjCY,EAFwB,EAE9BnB,KAAc2B,EAFgB,EAEhBA,QAErB,OACI,qCACI,6BAAKpB,IACHoB,GAAW,4CACb,qBAAKJ,UAAU,YAAf,SAEQJ,EAAOJ,KAAI,SAACO,GACR,OACI,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIL,aEUnCiB,EAtBM,WACjB,IADuB,EAGW1C,mBAFX,CAAC,sBADD,mBAGhB2C,EAHgB,KAGLC,EAHK,KAKvB,OACI,qCACI,8CAEA,cAAC,EAAD,CAAa7C,cAAiB6C,IAG1BD,EAAUpB,KAAK,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAYA,GADLA,UCb3B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.eabe9f08.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handdleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    const handdleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( data => [inputValue,...data]);\r\n            setInputValue('')\r\n        }\r\n    }\r\n    return (\r\n\r\n        <form onSubmit = {handdleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={(e) => handdleInputChange(e)} />\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","//MÃ©todo para la peticion http ( promise )\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=RDitVu1l9K5f9s60B0TUxjgAIiWswlfy`;\r\n\r\n    const response = await fetch(url);\r\n    const { data } = await response.json();\r\n\r\n\r\n    const promiseFormatData = data.map((img) => {\r\n        return ({\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        })\r\n    })\r\n    return promiseFormatData;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({gif}) => {\r\n    return (\r\n        <div className = \"card animate__animated animate__jackInTheBox\">\r\n            <img src={gif.url} alt= {gif.title} />\r\n            \r\n            <h2 key={gif.id}>{gif.title}</h2>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data: images, loading} = useFetchGifs( category );\r\n\r\n    return (\r\n        <>  \r\n            <h2>{category}</h2>\r\n            { loading && <p>Loading ...</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map((gif) => {\r\n                        return (\r\n                            <GifGridItem key={gif.id} gif={gif} />\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect ( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                \r\n                    setstate({\r\n                        data: imgs,\r\n                        loading:false\r\n                    })\r\n                    \r\n            })\r\n    }, [category])\r\n\r\n    return state; \r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const categoriasBase = ['Patricio Estrella'];\r\n\r\n    const [categoria, setCategoria] = useState(categoriasBase);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            \r\n            <AddCategory setCategories = {setCategoria} />\r\n            \r\n            {\r\n                categoria.map( category => (\r\n                    <GifGrid \r\n                    key = {category}\r\n                    category = {category} />\r\n                ))\r\n            }\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}